TODO
+0. Временно включить выполнение запросов по /rest/* для незарегистрированного пользователя
+1. Написать Rest контроллер для всех CRUD операций
+1.1 Все операции производить по адресу /rest/admin/*, /rest/user/*
+1.2 Протестировать работу rest контроллера в postman(все методы работают при
отправке правильно заполненных запросов с JSON из postman)
2. Сделать новые html шаблоны views/rest/admin/*, views/rest/user/*
+2.1 Убрать весь thymeleaf из html
+2.2 Перенести модальное окно отдельно
+2.3 Проверить чтобы модалка загружалась без данных
+2.4 Подключить файл JS(подключить статические ресурсы)
+2.5 ПРоверить работоспособность скриптов из файла JS
2.6 Реализовать подгрузку из rest-контроллера данных
+2.6.1 Principal данные в шапке сайта
+2.6.2 Списка пользователей
+2.6.3 Отправка формы new User
(https://only-to-top.ru/blog/programming/2019-09-17-otpravka-dannyh-fetch-api.html)
+2.6.4 Кнопка edit
+2.6.4.1 Убрать столбец Password из списка пользователей
+2.6.5 Кнопка delete
+2.6.6 Данные в левой вкладке User

+2.7 Тестирование
+2.7.1 После edit, не заполняется модальное окно при клике на delete
+2.7.2 Добавить стрелочки увеличения и уменьшения на 1 Age в New User и модальном окне edit
+2.7.3 И ROLE_USER и ROLE_ADMIN после аутентификации переходят на http://localhost:8080
+2.7.4 На вкладке User убрать столбец Password
+2.7.5 Страница login открывается на http://localhost:8080

+3. Включить секьюрность для /rest/*
+3.1 Сокрытие данных при зарегистрированном пользователе без прав "ROLE_ADMIN"
+3.2 Возможность запросов при выбранной роли:

***
Коментарии от ментора 18.06.2021:
Делаем вообще без thymeleaf.
Из обычного контроллера подгружается основной код html страницы.
В коде страницы при загрузке страницы с помощью JQuery подгружаем данные пользователей и зарегистрированного пользователя.
Весь код JS выносим в отдельный файл .js и подключаем к странице html.


Задание:
1. Написать Rest-контроллеры для вашего приложения.
2. Переписать вывод (заполнение) таблицы, модальных окон и т.д. на JS c помощью Fetch API,
допускается использование JQuery.
3. При любых изменениях данных страница приложения не должна перезагружаться!

Ссылки:
https://learn.javascript.ru/fetch
https://habr.com/ru/company/otus/blog/440046/


***
В текущей реализации роли в таблицу roles необходимо добавлять ручками.
Функционал по добавлению ролей через web форму не реализован.
В задании нет такой задачи.

***
admin\index.html
Закомментировал div-ы с проверкой валидации, т.к. чтобы это работало корректно нужно перенаправлять ответ из контроллера в необходимую часть кода. А наше приложение так пока не умеет.
При неправильном с точки зрения валидации вводе данных в форму при изменении  user или создании user нас просто перенаправляет на страницу admin/index.html